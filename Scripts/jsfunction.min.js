function fn_Editar() { fn_GetIdValue(), HiddenV.Set("Nuevo", 1), FormPopup.Show() } function fn_Nuevo() { txtId.SetText("Nuevo"), HiddenV.Set("Nuevo", 0), fn_CleanGroup(1), FormPopup.Show() } function fn_NewJS() { txtId.SetText("Nuevo"), HiddenV.Set("Nuevo", 0), FormPopup.Show(), fn_CleanGroup(1) } function fn_EditJS() { null == fn_GetIdValue() ? alert("Debe seleciconar un registro") : (HiddenV.Set("Nuevo", 1), fn_GetIdValue(), FillingCallback.PerformCallback(), FormPopup.Show()) } function fn_SaveJS() { ASPxClientEdit.ValidateGroup("ControlGroup1") || retutn, NewCallback.PerformCallback(), fn_CleanGroup(1), GridPrincipal.PerformCallback(), FormPopup.Hide() } function fn_DeleteJS() { null == fn_GetIdValue() ? alert("Debe seleciconar un registro") : (HiddenV.Set("Nuevo", 2), fn_ShowDelete()) } function fn_ConfirmDJS() { NewCallback.PerformCallback(), fn_EndCallback(), fn_ClosePopup(2) } function fn_CancelDJS() { fn_ClosePopup(2) } function fn_CancelJS() { fn_ClosePopup(0) } function fn_EndCallback() { GridPrincipal.PerformCallback() } function GetAprobRow() { function e(e) { return 1 == e ? void alert("El registro ya ha sido aprobado y no puede realizar cambios") : void fn_AprobarJS() } GridPrincipal.GetRowValues(GridPrincipal.GetFocusedRowIndex(), "Aprobado", e) } function fn_AprobarJS() { confirm("¿Desea aprobar el registro?\nEl proceso no tiene retroceso!") && (HiddenV.Set("Nuevo", 6), HiddenV.Set("Aprobar", fn_GetIdValue()), NewCallback.PerformCallback(), fn_EndCallback()) } function fn_GetMail() { function e(e) { txtMail.SetText(e) } GridPrincipal.GetRowValues(GridPrincipal.GetFocusedRowIndex(), "Email", e) } function fn_SendSolJS() { HiddenV.Set("Nuevo", 7), HiddenV.Set("EnvioId", fn_GetIdValue()), NewCallback.PerformCallback(), fn_EndCallback() } function fn_SubNewJS() { HiddenV.Set("Session", fn_GetIdValue()), txtSubId.SetText("Nuevo"), HiddenV.Set("Nuevo", 3), SubFormPopup.Show(), fn_CleanGroup(2) } function fn_SubEditJS() { HiddenV.Set("Session", fn_GetIdValue()), null == fn_GetSubIdValue() ? alert("Debe seleciconar un registro") : (HiddenV.Set("Nuevo", 4), fn_GetSubIdValue(), SubFillingCallback.PerformCallback(), SubFormPopup.Show()) } function fn_SubSaveJS() { ASPxClientEdit.ValidateGroup("ControlGroup2") || retutn, NewCallback.PerformCallback(), fn_CleanGroup(2), GridPrincipal.PerformCallback(), SubFormPopup.Hide() } function fn_SubAdd() { ASPxClientEdit.ValidateGroup("ControlGroup2") || retutn, HiddenV.Set("Nuevo", 3), NewCallback.PerformCallback(), fn_CleanGroup(2), GridPrincipal.PerformCallback() } function fn_SubDeleteJS() { HiddenV.Set("Nuevo", 5), fn_ShowSubDelete() } function fn_SubConfirmDJS() { DelCallback.PerformCallback(), fn_EndCallback(), fn_ClosePopup(2) } function fn_SubCancelDJS() { fn_ClosePopup(2) } function fn_SubCancelJS() { fn_ClosePopup(5) } function fn_SubNew2JS() { HiddenV.Set("Session", fn_GetIdValue()), txtSubId2.SetText("Nuevo"), HiddenV.Set("Nuevo", 10), SubFormPopup2.Show(), fn_CleanGroup(3) } function fn_SubEdit2JS() { HiddenV.Set("Session", fn_GetIdValue()), null == fn_GetSubIdValue2() ? alert("Debe seleciconar un registro") : (HiddenV.Set("Nuevo", 11), fn_GetSubIdValue2(), SubFillingCallback2.PerformCallback(), SubFormPopup2.Show()) } function fn_SubSave2JS() { ASPxClientEdit.ValidateGroup("ControlGroup3") || retutn, NewCallback.PerformCallback(), fn_CleanGroup(3), GridPrincipal.PerformCallback(), SubFormPopup2.Hide() } function fn_SubAdd2() { ASPxClientEdit.ValidateGroup("ControlGroup3") || retutn, NewCallback.PerformCallback(), fn_CleanGroup(3), GridPrincipal.PerformCallback() } function fn_SubDelete2JS() { HiddenV.Set("Nuevo", 12), fn_ShowSubDelete2() } function fn_SubConfirmD2JS() { DelCallback.PerformCallback(), GridPrincipal.PerformCallback(), fn_ClosePopup(2) } function fn_SubCancelD2JS() { fn_ClosePopup(2) } function fn_SubCancel2JS() { fn_ClosePopup(3) } function fn_GetIdValue() { return GridId = GridPrincipal.GetRowKey(GridPrincipal.GetFocusedRowIndex()), txtId.SetText(GridId), GridId } function fn_GetIdValueN() { GridId = GridPrincipal.GetRowKey(GridPrincipal.GetFocusedRowIndex()), document.getElementById("txtId2").value = GridId, document.getElementById("btnUpdate").click() } function fn_GetSubIdValue() { return SubGridId = SubGrid.GetRowKey(SubGrid.GetFocusedRowIndex()), txtSubId.SetText(SubGridId), SubGridId } function fn_GetSubIdValue2() { return SubGridId2 = SubGrid2.GetRowKey(SubGrid2.GetFocusedRowIndex()), txtSubId2.SetText(SubGridId2), SubGridId2 } function fn_GetGridResIdValue() { return ResGridId = GridResultados.GetRowKey(GridResultados.GetFocusedRowIndex()), txtId.SetText(ResGridId), ResGridId } function fn_GetGridResIdValue2() { return ResGridId2 = GridResultados2.GetRowKey(GridResultados2.GetFocusedRowIndex()), txtId2.SetText(ResGridId2), ResGridId2 } function fn_PrintValue(e) { alert(e) } function fn_ShowMessage() { alert("Working over here") } function fn_CallUpdate() { fn_ShowMessage(), document.getElementById("btnUpdate").click() } function fn_New() { HiddenV.Set("Nuevo", 0), txtId.SetText("Nuevo"), fn_CleanGroup(1), FormPopup.Show(), fn_CleanGroup1() } function fn_ShowDelete() { GridId = GridPrincipal.GetRowKey(GridPrincipal.GetFocusedRowIndex()), txtIdD.SetText(GridId), DeleteForm.Show() } function fn_ShowSubDelete() { null == fn_GetSubIdValue() ? alert("Debe seleciconar un registro") : (SubGridId = SubGrid.GetRowKey(SubGrid.GetFocusedRowIndex()), txtIdD.SetText(SubGridId), DeleteForm.Show()) } function fn_ShowSubDelete2() { null == fn_GetSubIdValue2() ? alert("Debe seleciconar un registro!") : (SubGridId2 = SubGrid2.GetRowKey(SubGrid2.GetFocusedRowIndex()), txtIdD.SetText(SubGridId2), DeleteForm.Show()) } function fn_ShowDeleteTestJS() { null == fn_GetGridResIdValue() ? alert("Debe seleciconar un registro!") : (ResGridId = GridResultados.GetRowKey(GridResultados.GetFocusedRowIndex()), txtIdD.SetText(ResGridId), DeleteForm.Show()) } function fn_ShowDeleteTestJS2() { null == fn_GetGridResIdValue2() ? alert("Debe seleciconar un registro!") : (ResGridId2 = GridResultados2.GetRowKey(GridResultados2.GetFocusedRowIndex()), txtIdD.SetText(ResGridId2), DeleteForm.Show()) } function fn_ClosePopup(e) { switch (e) { case 0: FormPopup.Hide(), fn_CleanGroup(1), HiddenV.Clear(); break; case 1: FormPopup.Hide(); break; case 2: DeleteForm.Hide(); break; case 3: SubFormPopup2.Hide(); break; case 5: fn_CleanGroup(2), SubFormPopup.Hide(); break; default: FormPopup.Hide() } } function fn_CleanGroup(e) { switch (e) { case -1: ASPxClientEdit.ClearGroup("ControlGroupR"); break; case 1: ASPxClientEdit.ClearGroup("ControlGroup1"); break; case 2: ASPxClientEdit.ClearGroup("ControlGroup2"); break; case 3: ASPxClientEdit.ClearGroup("ControlGroup3"); break; default: ASPxClientEdit.ClearGroup("ControlGroup1") } } function fn_CleanGroup1() { ASPxClientEdit.ClearGroup("ControlGroup1") } function fn_CleanGroup2() { ASPxClientEdit.ClearGroup("ControlGroup2") } function fn_Validate(e) { switch (e) { case 0: if (!ASPxClientEdit.ValidateGroup("ControlGroup1")) return; break; case 1: if (!ASPxClientEdit.ValidateGroup("ControlGroup2")) return; break; case -1: if (!ASPxClientEdit.ValidateGroup("ControlGroupR")) return; break; default: fn_ClosePopup(1) } } function fn_MostrarCredito() { swal("Copyrights!", "SISLIJAD. \n Diseño: Haniel Lopez. \n Base de datos: Haniel Lopez. \n Programación: Haniel Lopez", "success") } function fn_NewMainTest() { txtId.SetText("Nuevo Calculo"), HiddenV.Set("Fill", 1), HiddenV.Set("Nuevo", 0), FormPopup.Show(), fn_CleanGroup(1), fn_CleanGroup(-1) } function fn_SaveTestJS() { ASPxClientEdit.ValidateGroup("ControlGroupR") || retutn, ASPxClientEdit.ValidateGroup("ControlGroup1") || retutn, NewCallback.PerformCallback(), fn_CleanTestPopup(1), GridResultados.PerformCallback(), FormPopup.Hide() } function fn_CalcJS() { ASPxClientEdit.ValidateGroup("ControlGroup1") || retutn, HiddenV.Set("Fill", 1), FillingCallback.PerformCallback() } function fn_CleanTestPopup(e) { switch (e) { case 1: fn_CleanGroup(0), fn_CleanGroup(-1); break; default: fn_CleanGroup(0) } } function fn_EditTestJS() { null == fn_GetGridResIdValue() ? alert("Debe seleciconar un registro") : (HiddenV.Set("Nuevo", 1), HiddenV.Set("Fill", 0), FillingCallback.PerformCallback(), FormPopup.Show()) } function fn_CancelTestJS() { fn_CleanGroup(-1), fn_CleanGroup(0), FormPopup.Hide() } function fn_DeleteTestJS() { HiddenV.Set("Nuevo", 2), fn_ShowDeleteTestJS() } function fn_ConfirmResDJS() { NewCallback.PerformCallback(), GridResultados.PerformCallback(), fn_ClosePopup(2) } function fn_NewMainTest2() { txtId2.SetText("Nuevo Calculo"), HiddenV.Set("Fill", 1), HiddenV.Set("Nuevo", 3), FormPopup2.Show(), fn_CleanGroup(1), fn_CleanGroup(-1) } function fn_SaveTestJS2() { ASPxClientEdit.ValidateGroup("ControlGroupR") || retutn, ASPxClientEdit.ValidateGroup("ControlGroup1") || retutn, NewCallback.PerformCallback(), GridResultados2.PerformCallback(), fn_CleanTestPopup(1), FormPopup2.Hide() } function fn_CalcJS2() { ASPxClientEdit.ValidateGroup("ControlGroup1") || retutn, HiddenV.Set("Fill", 1), FillingCallback2.PerformCallback() } function fn_CleanTestPopup(e) { switch (e) { case 1: fn_CleanGroup(0), fn_CleanGroup(-1); break; default: fn_CleanGroup(0) } } function fn_EditTestJS2() { null == fn_GetGridResIdValue2() ? alert("Debe seleciconar un registro") : (HiddenV.Set("Nuevo", 4), HiddenV.Set("Fill", 0), FillingCallback2.PerformCallback(), FormPopup2.Show()) } function fn_CancelTestJS() { fn_CleanGroup(-1), fn_CleanGroup(0), FormPopup.Hide() } function fn_DeleteTestJS2() { HiddenV.Set("Nuevo", 5), fn_ShowDeleteTestJS2() } function fn_ConfirmDJS2() { NewCallback.PerformCallback(), GridResultados2.PerformCallback(), GridResultados.PerformCallback(), fn_ClosePopup(2) } function fn_CancelTest2JS() { fn_CleanGroup(-1), fn_CleanGroup(0), FormPopup2.Hide() } function fn_EndCallbackForTest() { GridResultados.PerformCallback() } function fn_ConfirmTestDJS() { NewCallback.PerformCallback(), GridResultados.PerformCallback(), fn_ClosePopup(2) } function fn_ShowWindowReport(e) { switch (e) { case 1: window.open("http://www.w3schools.com", "_blank", "toolbar=yes, scrollbars=yes, resizable=yes, top=500, left=500, width=400, height=400") } } function fn_VerMaterialesJS() { SubGridId = SubGrid.GetRowKey(SubGrid.GetFocusedRowIndex()), window.location.href = "/Clientes/Reportes/Rpt_MaterialesRequeridos.aspx?Id=" + SubGridId } function fn_IrChecklist() { function e(e) { window.location.href = "/Tecnicos/Reportes/Rpt_MaterialesReq.aspx?Id=" + e } SubGrid.GetRowValues(SubGrid.GetFocusedRowIndex(), "IdPrueba", e) } function fn_IrEqChecklist() { function e(e) { window.location.href = "/Tecnicos/Reportes/Rpt_EquipReq.aspx?Id=" + e } SubGrid.GetRowValues(SubGrid.GetFocusedRowIndex(), "IdPrueba", e) } function fn_ChangeProfileJS() { FillingCallback.PerformCallback(), FormPopup.Show() } function fn_SaveProfileJS() { NewCallback.PerformCallback(), fn_ClosePopup(1) } function fn_Welcome() { swal("Bienvenido!", "Por favor completa tu perfil! De esta manera sabremos más de ti", "success"), swal({ title: "Bienvenido?", text: "Por favor completa tu perfil! \n De esta manera sabremos más de usted!", type: "success", showCancelButton: !1, confirmButtonColor: "#66CC66", confirmButtonText: "Continuar!", closeOnConfirm: !1 }, function () { swal("Antes de todo!", "Tu usuario será aprobado por al administrador lo antes posible según los datos introducidos. \n Así puedas acceder a las funciones asignadas en el sistema. \n Gracias.", "info") }) } function fn_AprobMes(e) { switch (e) { case 0: swal({ title: "Atención!", text: "¡El registro ya ha sido Aprobado!", type: "info", confirmButtonText: "Ok" }); break; case 1: swal({ title: "Atención!", text: "¡La solicitud ya ha sido cancelada!", type: "info", confirmButtonText: "Ok" }); break; case 2: swal({ title: "Atención!", text: "¡El registro ya ha sido aprobado y no puede realizar cambios!", type: "info", confirmButtonText: "Ok" }); break; case 3: swal({ title: "Atención!", text: "¡El registro ya ha sido pagado!", type: "info", confirmButtonText: "Ok" }); break; case 4: swal({ title: "Atención!", text: "¡El registro ya ha sido cancelado y no puede realizar ningún cambio!", type: "info", confirmButtonText: "Ok" }); break; case 5: swal({ title: "Atención!", text: "¡El registro ya ha sido enviado y no puede realizar cambios!", type: "info", confirmButtonText: "Ok" }); break; case 6: swal({ title: "Atención!", text: "¡El registro ya ha sido enviado!", type: "info", confirmButtonText: "Ok" }); break; case 7: swal("Autorizado!", "¡El registro ha sido autorizado!", "success"); break; case 8: swal("Pagado!", "¡Registro establecido pagado!", "success"); break; case 9: swal("Cancelado!", "¡El registro ha sido cancelado!", "success"); break; default: alert("error sweet alert") } } function CheckDifference() { var e = new Date, n = new Date, o = -1; if (e = deFeIni.GetDate(), null != e) { n = deFefin.GetDate(); var t = e.getTime(), r = n.getTime(); o = (r - t) / 864e5 } return o }